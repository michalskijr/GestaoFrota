unit CadMotoristaUnit;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Grids, DBGrids, StdCtrls, Mask, ComCtrls, Buttons, ExtCtrls,
  DBCtrls, DB;

type
    TFormCadMotorista = class(TForm)
    Panel: TPanel;
    Label1: TLabel;
    LabelNome: TLabel;
    Label4: TLabel;
    BitBtnConsulta: TBitBtn;
    PageControl: TPageControl;
    TabDados: TTabSheet;
    LabelCPFCNPJ: TLabel;
    LabelRGEstadual: TLabel;
    labelNomeFantasia: TLabel;
    labelDtNascimento: TLabel;
    maskCPFCNPJ: TMaskEdit;
    radioGroupSexo: TRadioGroup;
    radioMasculino: TRadioButton;
    radioFeminino: TRadioButton;
    PanelBotoes: TPanel;
    btnNovo: TBitBtn;
    btnExcluir: TBitBtn;
    btnGravar: TBitBtn;
    btnCancelar: TBitBtn;
    TabEndereco: TTabSheet;
    gridEndereco: TDBGrid;
    btnAdd: TBitBtn;
    btnRemover: TBitBtn;
    TabContato: TTabSheet;
    gridContato: TDBGrid;
    btnAddContato: TBitBtn;
    btnRemoverContato: TBitBtn;
    DSMotorista: TDataSource;
    edtCod: TDBEdit;
    DSPessoa: TDataSource;
    edtDescricao: TDBEdit;
    edtDtTransacao: TDBEdit;
    DSFisica: TDataSource;
    edtDtNascimento: TDBEdit;
    edtRg: TDBEdit;
    edtCnh: TDBEdit;
    Label5: TLabel;
    Label6: TLabel;
    edtCategoria: TDBEdit;
    DSEndereco: TDataSource;
    DSContato: TDataSource;
    procedure FormShow(Sender: TObject);
    procedure btnNovoClick(Sender: TObject);
    procedure habilitarAbas(Boolean: Boolean);
    procedure LimparCampos();
    procedure btnExcluirClick(Sender: TObject);
    procedure btnGravarClick(Sender: TObject);
    procedure setValores();
    procedure ValidarCampos();
    procedure CommitRegistro();
    procedure btnCancelarClick(Sender: TObject);
    procedure BitBtnConsultaClick(Sender: TObject);
    procedure edtCodExit(Sender: TObject);
    procedure btnAddClick(Sender: TObject);
    procedure preencherGridEndereco();
    procedure btnRemoverClick(Sender: TObject);
    procedure DSPessoaStateChange(Sender: TObject);
    procedure btnAddContatoClick(Sender: TObject);
    procedure preencherGridContato();
    procedure btnRemoverContatoClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FormCadMotorista: TFormCadMotorista;
  tipoRegistro: Boolean = True;

implementation

uses DMUnit, CadEnderecoUnit, CadContatoUnit, StrUtils, MaskUtils,
  ConMotoristaUnit;

{$R *.dfm}

procedure TFormCadMotorista.FormShow(Sender: TObject);
begin
  PageControl.TabIndex := 0;

  DM.Conection.Connected := True;
  DM.Transaction.Active := True;
  DM.CAD_PESSOA.Active := True;
  DM.CAD_FISICA.Active := True;
  DM.CAD_MOTORISTA.Active := True;
end;

procedure TFormCadMotorista.btnNovoClick(Sender: TObject);
begin
  LimparCampos;
  DM.CAD_PESSOA.Append;
  DM.CAD_MOTORISTA.Append;

  DM.CAD_PESSOADT_TRANSACAO.AsDateTime := Date;
  DM.CAD_MOTORISTADT_TRANSACAO.AsDateTime := Date;

  DM.CAD_PESSOACD_PESSOA.AsInteger := DM.IBQCD_PESSOACD_PESSOA.AsInteger;
  DM.CAD_MOTORISTACD_MOTORISTA.AsInteger := 0;
  DM.CAD_MOTORISTACD_PESSOA.AsInteger := DM.IBQCD_PESSOACD_PESSOA.AsInteger;

  tipoRegistro := True;
  habilitarAbas(False);
end;

//Habilita/Desabilita as abas: Endereço e Contato
procedure TFormCadMotorista.habilitarAbas(Boolean: Boolean);
begin
  TabEndereco.Enabled := Boolean;
  TabContato.Enabled := Boolean;
end;

//Limpa os EditTex e LookupComboBox
procedure TFormCadMotorista.LimparCampos();
var
  i : Integer;
begin
  for i := 0 to FormCadMotorista.ComponentCount -1 do
    begin
      if FormCadMotorista.Components[i] is TDBEdit then
        begin
          TDBEdit(FormCadMotorista.Components[i]).Text := '';
        end
      else if FormCadMotorista.Components[i] is TDBLookupComboBox then
        begin
          TDBLookupComboBox(FormCadMotorista.Components[i]).KeyValue := null;
        end
      else if FormCadMotorista.Components[i] is TMaskEdit then
        begin
          TMaskEdit(FormCadMotorista.Components[i]).Text := '';
        end
        else if FormCadMotorista.Components[i] is TEdit then
          begin
            TEdit(FormCadMotorista.Components[i]).Text := '';
          end;
    end;

  radioMasculino.Checked := True;
  DM.IBQCAD_ENDERECO.Close;
  DM.IBQCAD_CONTATO.Close;
end;

//Ao clicar no botão excluir
procedure TFormCadMotorista.btnExcluirClick(Sender: TObject);
begin
  if(DM.CAD_PESSOA.IsEmpty) then
    begin
      ShowMessage('Selecione um registro para excluir!');
      Abort;
    end
    else if(edtCod.Text = '0') or (edtDescricao.Text = '') then
      begin
        LimparCampos;
        DM.CAD_PESSOA.Cancel;
        DM.CAD_FISICA.Cancel;
        DM.CAD_MOTORISTA.Cancel;
        Abort;
      end;

  if(MessageDlg('Deseja excluir este Registro?', mtConfirmation, mbYesNoCancel, 0) = mrYes) then
    begin
      if not (DM.IBQCAD_ENDERECO.IsEmpty) then
        begin
          DM.CAD_ENDERECO.Active := True;
          DM.CAD_ENDERECO.Close;
          DM.CAD_ENDERECO.ParamByName('PCDPESSOA').Value := DM.CAD_PESSOACD_PESSOA.Value;
          DM.CAD_ENDERECO.Open;

          DM.CAD_ENDERECO.First;
          while not DM.CAD_ENDERECO.Eof do
            begin
              DM.CAD_ENDERECO.Delete;
              DM.CAD_ENDERECO.Next;
              DM.CAD_ENDERECO.First;
            end;
        end;
        //deleter contato
      if not (DM.IBQCAD_CONTATO.IsEmpty) then
        begin
          DM.CAD_CONTATO.Active := True;
          DM.CAD_CONTATO.Close;
          DM.CAD_CONTATO.ParamByName('PCDPESSOA').Value := DM.CAD_PESSOACD_PESSOA.Value;
          DM.CAD_CONTATO.Open;

          DM.CAD_CONTATO.First;
          while not DM.CAD_CONTATO.Eof do
            begin
              DM.CAD_CONTATO.Delete;
              DM.CAD_CONTATO.Next;
              DM.CAD_CONTATO.First;
            end;
        end;
      DM.CAD_MOTORISTA.Delete;
      DM.CAD_FISICA.Delete;
      DM.CAD_PESSOA.Delete;

      DM.Transaction.CommitRetaining;
      ShowMessage('Registro excluído com sucesso!');
      DM.IBQCAD_ENDERECO.Close;
      DM.IBQCAD_CONTATO.Close;

      habilitarAbas(False);
      LimparCampos;
    end;
end;

//Ao clicar em gravar
procedure TFormCadMotorista.btnGravarClick(Sender: TObject);
begin
  ValidarCampos;
  if(tipoRegistro) then
    begin
      setValores;
      CommitRegistro;
      ShowMessage('Registro gravado com sucesso!');
      habilitarAbas(True);
    end
    //executa quando for alteração
    else
      begin
        setValores;
        CommitRegistro;
        ShowMessage('Registro alterado com sucesso!');
      end;
end;

//set os valores
procedure TFormCadMotorista.setValores();
var
  cpf : String;
begin
  DM.CAD_PESSOATP_PESSOA.Value := 'F';
  DM.CAD_FISICACD_PESSOA.Value := DM.CAD_PESSOACD_PESSOA.Value;
  cpf := AnsiReplaceStr(maskCPFCNPJ.Text, '.', '');  //remove os pontos do cpf
  cpf := AnsiReplaceStr(cpf, '-', '');           //remove o traço do cpf
  DM.CAD_FISICANR_CPF.Value := cpf;

  if(radioMasculino.Checked) then
    begin   //sexo masculino
      DM.CAD_FISICAIN_SEXO.Value := 'M';
    end
      else //sexo feminino
        begin
          DM.CAD_FISICAIN_SEXO.Value := 'F';
        end;
end;

//Valida se os campos estão preenchidos
procedure TFormCadMotorista.ValidarCampos();
begin
  if(edtDtTransacao.Text = '') then
    begin
      ShowMessage('Valor não informado!');
      Abort;
    end
    else if(edtCod.Text = '') then
      begin
        ShowMessage('Valor não informado!');
        Abort;
      end
      else if(edtDescricao.Text = '') then
        begin
          ShowMessage('Valor não informado!');
          edtDescricao.SetFocus;
          Abort;
        end
        else if(maskCPFCNPJ.Text = '') then
          begin
            ShowMessage('Valor não informado!');
            maskCPFCNPJ.SetFocus;
            Abort;
          end
          else if(edtRg.Text = '') then
            begin
              ShowMessage('Valor não informado!');
              edtRg.SetFocus;
              Abort;
            end
            else if(edtDtNascimento.Text = '') then
              begin
                ShowMessage('Data de nascimento não informada!');
                edtDtNascimento.SetFocus;
                Abort;
              end
              else if(edtCnh.Text = '') then
                begin
                  ShowMessage('Informe o número da carteira de habilitação!');
                  edtCnh.SetFocus;
                  Abort;
                end
                else if(edtCategoria.Text = '') then
                  begin
                    ShowMessage('Informe a categoria da CNH!');
                    edtCategoria.SetFocus;
                    Abort;
                  end;
end;

//Commit o registro no banco de dados
procedure TFormCadMotorista.CommitRegistro();
begin
  DM.CAD_PESSOA.Post;
  DM.CAD_FISICA.Post;

  if(tipoRegistro) then
    begin
      DM.CAD_MOTORISTA.Post;
    end;
  DM.Transaction.CommitRetaining;

  //DM.IBQCAD_MOTORISTA.Close;
end;

procedure TFormCadMotorista.btnCancelarClick(Sender: TObject);
begin
  DM.CAD_PESSOA.Cancel;
  DM.CAD_FISICA.Cancel;
  DM.CAD_MOTORISTA.Cancel;

  LimparCampos;
  habilitarAbas(False);
end;

procedure TFormCadMotorista.BitBtnConsultaClick(Sender: TObject);
begin
  DM.CAD_PESSOA.Append;
  DM.CAD_FISICA.Append;
  DM.CAD_MOTORISTA.Append;
  FormConsultaMotorista.ShowModal;

  if(FormConsultaMotorista.ModalResult = mrOk) then
    begin
      DM.CAD_PESSOACD_PESSOA.Value := DM.IBQCAD_MOTORISTACD_PESSOA.Value;
      edtCodExit(Sender);
      tipoRegistro := False;
    end
  else
    begin
      LimparCampos;
    end;
end;

//Executa ao sair do campo código
procedure TFormCadMotorista.edtCodExit(Sender: TObject);
var
  cod : Integer;
begin
  if(edtCod.Text = '') then
    begin
      LimparCampos;
      Abort;
    end
    else if(TryStrToInt(edtCod.Text, cod) = True) then
      begin
        DM.CAD_PESSOA.Active := True;
        DM.CAD_PESSOA.Close;
        DM.CAD_PESSOA.ParamByName('PCDPESSOA').Value := cod;
        DM.CAD_PESSOA.Open;

        if(DM.CAD_PESSOA.IsEmpty = True) then
          begin
            edtCod.SetFocus;
          end
          else
            begin
              DM.CAD_FISICA.Active := True;
              DM.CAD_FISICA.Close;
              DM.CAD_FISICA.ParamByName('PCDPESSOA').Value := cod;
              DM.CAD_FISICA.Open;

              maskCPFCNPJ.Text := FormatMaskText('000.000.000-00;0', DM.CAD_FISICANR_CPF.Value);

              if(DM.CAD_FISICAIN_SEXO.Value = 'M') then
                begin
                  radioMasculino.Checked := True;
                 end
                 else
                  begin
                    radioFeminino.Checked := True;
                  end;
              DM.CAD_MOTORISTA.Active := True;
              DM.CAD_MOTORISTA.Close;
              DM.CAD_MOTORISTA.ParamByName('PCDPESSOA').Value := cod;
              DM.CAD_MOTORISTA.Open;
              
              tipoRegistro := False;
              habilitarAbas(True);
              preencherGridEndereco;
              preencherGridContato;
              DM.CAD_PESSOA.Edit;
              DM.CAD_FISICA.Edit;
              DM.CAD_MOTORISTA.Edit;
            end;
      end;
end;

//Cadastrar endereço
procedure TFormCadMotorista.btnAddClick(Sender: TObject);
begin
  FormCadEndereco.ShowModal;

  if(FormCadEndereco.ModalResult = 2) then
    begin
      preencherGridEndereco;
    end;
end;

//preencher a grid de endereço
procedure TFormCadMotorista.preencherGridEndereco();
begin
  DM.IBQCAD_ENDERECO.Active := True;
  DM.IBQCAD_ENDERECO.Close;
  DM.IBQCAD_ENDERECO.ParamByName('PCDPESSOA').Value := edtCod.Text;
  DM.IBQCAD_ENDERECO.Open;
end;

//Remove o cadastro de endereço
procedure TFormCadMotorista.btnRemoverClick(Sender: TObject);
begin
  if(MessageDlg('Deseja excluir este registro?', mtWarning, mbOKCancel,0) = mrOk) then
    begin
      DM.CAD_ENDERECO.Active := True;
      DM.CAD_ENDERECO.Close;
      DM.CAD_ENDERECO.SelectSQL.Clear;
      DM.CAD_ENDERECO.SelectSQL.Add('SELECT * FROM CAD_ENDERECO WHERE CD_PESSOA = :PCDPESSOA AND NR_SEQ = :PNRSEG');
      DM.CAD_ENDERECO.ParamByName('PCDPESSOA').Value := DM.CAD_PESSOACD_PESSOA.Value;
      DM.CAD_ENDERECO.ParamByName('PNRSEG').Value := DM.IBQCAD_ENDERECONR_SEQ.Value;
      DM.CAD_ENDERECO.Open;

      if(DM.CAD_ENDERECO.IsEmpty) then
        begin
          ShowMessage('Nenhum registro selecionado!');
          Abort;
        end;

      DM.CAD_ENDERECO.Delete;
      DM.Transaction.CommitRetaining;

      preencherGridEndereco;
    end;
end;

procedure TFormCadMotorista.DSPessoaStateChange(Sender: TObject);
begin
  if(edtCod.Text = '') or (edtCod.Text = '0') then
    begin
      TabEndereco.Enabled := False;
      TabContato.Enabled := False;
    end
    else
      begin
        TabEndereco.Enabled := True;
        TabContato.Enabled := True;
      end;
  if(DM.CAD_PESSOA.State IN [DSINSERT,DSEDIT]) then
    begin
      btnNovo.Enabled := False;
      BitBtnConsulta.Enabled := False;

      btnGravar.Enabled := True;
      btnExcluir.Enabled := True;
    end
    else
      begin
        btnNovo.Enabled := True;
        BitBtnConsulta.Enabled := True;

        btnGravar.Enabled := False;
        btnExcluir.Enabled := False;
      end;
end;

procedure TFormCadMotorista.btnAddContatoClick(Sender: TObject);
begin
  FormCadContato.ShowModal;

  if(FormCadContato.ModalResult = 2) then
    begin
      preencherGridContato;
    end;
end;

//preencher a grid de contato
procedure TFormCadMotorista.preencherGridContato();
begin
  DM.IBQCAD_CONTATO.Active := True;
  DM.IBQCAD_CONTATO.Close;
  DM.IBQCAD_CONTATO.ParamByName('PCDPESSOA').Value := edtCod.Text;
  DM.IBQCAD_CONTATO.Open;
end;

procedure TFormCadMotorista.btnRemoverContatoClick(Sender: TObject);
begin
  if(MessageDlg('Deseja excluir este registro?', mtWarning, mbOKCancel,0) = mrOk) then
    begin
      DM.CAD_CONTATO.Active := True;
      DM.CAD_CONTATO.Close;
      DM.CAD_CONTATO.SelectSQL.Clear;
      DM.CAD_CONTATO.SelectSQL.Add('SELECT * FROM CAD_CONTATO WHERE CD_PESSOA = :PCDPESSOA AND NR_SEQ = :PNRSEG');
      DM.CAD_CONTATO.ParamByName('PCDPESSOA').Value := DM.CAD_PESSOACD_PESSOA.Value;
      DM.CAD_CONTATO.ParamByName('PNRSEG').Value := DM.IBQCAD_CONTATONR_SEQ.Value;
      DM.CAD_CONTATO.Open;

      if(DM.CAD_CONTATO.IsEmpty) then
        begin
          ShowMessage('Nenhum registro selecionado!');
          Abort;
        end;

      DM.CAD_CONTATO.Delete;
      DM.Transaction.CommitRetaining;

      preencherGridContato;
    end;
end;

end.
